name: CI & Deploy to Railway
on:
  push:
    branches: [master]

permissions:
  contents: read
  packages: write

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
      - name: Run tests
        run: mvn -B test --file pom.xml

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push telegram-bot-service image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./telegram-bot-service/Dockerfile
          push: true
          tags: ghcr.io/bunakdenis/telegram-bot-service:latest
          load: false
          no-cache: false
          pull: true

      - name: Build and push main-utils-service image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./main-utils-service/Dockerfile
          push: true
          tags: ghcr.io/bunakdenis/main-utils-service:latest
          load: false
          no-cache: false
          pull: true

  deploy-railway:
    needs: build-deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Railway CLI
        run: npm install -g @railway/cli

      - name: Login to Railway
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: railway auth login --token $RAILWAY_TOKEN

      - name: Link to Railway Project
        env:
          RAILWAY_PROJECT_ID: ${{ secrets.RAILWAY_PROJECT_ID }}
        run: railway link $RAILWAY_PROJECT_ID

      - name: Deploy or Redeploy telegram-bot-service
        env:
          SERVICE_NAME: ${{ secrets.RAILWAY_SERVICE_NAME_TELEGRAM }}
          IMAGE_TAG: ghcr.io/${{ github.repository_owner }}/telegram-bot-service:latest
          SPRING_PROFILES_ACTIVE: prod
          TELEGRAM_BOT_TOKEN: ${{ secrets.PROD_TELEGRAM_BOT_TOKEN }}
        run: |
          echo "üîç Checking current deployed image for $SERVICE_NAME..."
          CURRENT_IMAGE=$(railway status --json | jq -r \
            ".services[] | select(.name==\"$SERVICE_NAME\") | .deployments[0].meta.image")

          if [ "$CURRENT_IMAGE" = "$IMAGE_TAG" ]; then
            echo "‚ôªÔ∏è Image already deployed. Running redeploy..."
            railway redeploy --service $SERVICE_NAME
          else
            echo "üöÄ New image detected. Running deploy..."
            railway up --detach \
              --service $SERVICE_NAME \
              --image $IMAGE_TAG \
              --env SPRING_PROFILES_ACTIVE=$SPRING_PROFILES_ACTIVE \
              --env TELEGRAM_BOT_TOKEN=$TELEGRAM_BOT_TOKEN
          fi

      - name: Deploy or Redeploy main-utils-service
        env:
          SERVICE_NAME: ${{ secrets.RAILWAY_SERVICE_NAME_UTILS }}
          IMAGE_TAG: ghcr.io/${{ github.repository_owner }}/main-utils-service:latest
          SPRING_PROFILES_ACTIVE: prod
        run: |
          echo "üîç Checking current deployed image for $SERVICE_NAME..."
          CURRENT_IMAGE=$(railway status --json | jq -r \
            ".services[] | select(.name==\"$SERVICE_NAME\") | .deployments[0].meta.image")

          if [ "$CURRENT_IMAGE" = "$IMAGE_TAG" ]; then
            echo "‚ôªÔ∏è Image already deployed. Running redeploy..."
            railway redeploy --service $SERVICE_NAME
          else
            echo "üöÄ New image detected. Running deploy..."
            railway up --detach \
              --service $SERVICE_NAME \
              --image $IMAGE_TAG \
              --env SPRING_PROFILES_ACTIVE=$SPRING_PROFILES_ACTIVE
          fi