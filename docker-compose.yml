networks:
  app-network:
    driver: bridge

services:
  telegram-bot-service:
    build:
      context: .
      dockerfile: ./telegram-bot-service/Dockerfile
    env_file:
      - ./.env
    environment:
      SPRING_PROFILE_ACTIVE: prod
      TELEGRAM_BOT_NAME: ${TELEGRAM_BOT_NAME}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      API_MAIN_UTILS_SERVICE_URL: ${API_USEFUL_TOOLS_URL}
      #SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/mydatabase
      #SPRING_DATASOURCE_USERNAME: myuser
      #SPRING_DATASOURCE_PASSWORD: mypassword
    # Другие настройки Spring Boot и JPA
    networks:
      - app-network
    depends_on: # Указывает зависимость от других сервисов (для порядка старта)
  #      database:
  #      condition: service_healthy # Или service_started
      useful-tools:
        condition: service_healthy
  # healthcheck: # Настройте healthcheck для сервиса бота

  useful-tools:
    build:
      context: .
      dockerfile: ./useful-tools/Dockerfile
    mem_limit: 12g
    env_file:
      - ./.env
    environment:
      SPRING_PROFILE_ACTIVE: prod
      EXTERNAL_AUDIO_API_URL: http://useful-tools # URL внешнего API
      # Другие настройки
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://useful-tools:8080/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    ports:
      - "8080:8080"