
networks:
  app-network:
    driver: bridge

services:

  postgres-db:
    image: postgres:latest
    env_file:
      - ./.env
    environment:
      SPRING_PROFILES_ACTIVE: dev
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER_NAME}
      POSTGRES_PASSWORD: ${DB_USER_PASSWORD}
      POSTGRES_DB_HOST: ${POSTGRES_DB_HOST}
      POSTGRES_DB_PORT: ${POSTGRES_DB_PORT}
    networks:
      - app-network
    ports:
      - ${POSTGRES_DB_PORT}:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER_NAME} -d ${DB_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  useful-tools:
    image: bunakdenis/useful-tools:latest
    deploy:
      resources:
        limits:
          cpus: "4.0"
          memory: 12g
    env_file:
      - ./.env
    environment:
      SPRING_PROFILES_ACTIVE: dev
      USEFUL_TOOLS_API_PORT: ${USEFUL_TOOLS_API_PORT}
      USEFUL_TOOLS_API_URL: ${USEFUL_TOOLS_API_URL}
      USER_PASSWORD: ${USER_PASSWORD}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      MAIL_SEND_FROM: ${MAIL_SEND_FROM}
    networks:
      - app-network
    depends_on:
      postgres-db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "${USEFUL_TOOLS_API_URL}:${USEFUL_TOOLS_API_PORT}/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    ports:
      - ${USEFUL_TOOLS_API_PORT}:${USEFUL_TOOLS_API_PORT}

  data-provider-service:
    image: ${DATA_PROVIDER_SERVICE_IMAGE}
    env_file:
      - ./.env
    environment:
      SPRING_PROFILES_ACTIVE: dev
      DB_NAME: ${DB_NAME}
      DB_USER_NAME: ${DB_USER_NAME}
      DB_USER_PASSWORD: ${DB_USER_PASSWORD}
      POSTGRES_USER: ${DB_USER_NAME}
      POSTGRES_PASSWORD: ${DB_USER_PASSWORD}
      POSTGRES_DB_HOST: ${POSTGRES_DB_DOCKER_HOST}
      POSTGRES_DB_PORT: 5432
      DATA_PROVIDER_SERVICE_PORT: ${DATA_PROVIDER_SERVICE_PORT}
      DATA_PROVIDER_SERVICE_API_URL: ${DATA_PROVIDER_SERVICE_API_DOCKER_URL}
    networks:
      - app-network
    depends_on:
      postgres-db:
        condition: service_healthy
      useful-tools:
        condition: service_healthy
    ports:
      - ${DATA_PROVIDER_SERVICE_PORT}:${DATA_PROVIDER_SERVICE_PORT}
    healthcheck:
      test: [ "CMD", "curl", "-f", "${DATA_PROVIDER_SERVICE_API_DOCKER_URL}/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

  telegram-bot-service:
    image: ${TELEGRAM_BOT_SERVICE_IMAGE}
    env_file:
      - ./.env
    environment:
      SPRING_PROFILES_ACTIVE: dev
      TELEGRAM_BOT_PORT: ${TELEGRAM_BOT_PORT}
      USER_PASSWORD: ${USER_PASSWORD}
      TELEGRAM_BOT_NAME: ${TELEGRAM_BOT_NAME}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      USEFUL_TOOLS_API_URL: ${USEFUL_TOOLS_API_URL}
      USEFUL_TOOLS_API_FILE_SERVICE_ENDPOINT: ${USEFUL_TOOLS_API_FILE_SERVICE_ENDPOINT}
      DATA_PROVIDER_SERVICE_API_URL: ${DATA_PROVIDER_SERVICE_API_DOCKER_URL}
    networks:
      - app-network
    depends_on:
      data-provider-service:
        condition: service_healthy
    ports:
      - ${TELEGRAM_BOT_PORT}:${TELEGRAM_BOT_PORT}

  web-server-service:
    image: ${WEB_SERVER_SERVICE_IMAGE}
    env_file:
      - ./.env
    environment:
      SPRING_PROFILES_ACTIVE: dev
      WEB_SERVER_SERVICE_PORT: ${WEB_SERVER_SERVICE_PORT}
      USER_PASSWORD: ${USER_PASSWORD}
      USEFUL_TOOLS_API_URL: ${USEFUL_TOOLS_API_URL}
      USEFUL_TOOLS_API_FILE_SERVICE_ENDPOINT: ${USEFUL_TOOLS_API_FILE_SERVICE_ENDPOINT}
      DATA_PROVIDER_SERVICE_API_URL: ${DATA_PROVIDER_SERVICE_API_DOCKER_URL}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      MAIL_SEND_FROM: ${MAIL_SEND_FROM}
    networks:
      - app-network
    depends_on:
      data-provider-service:
        condition: service_healthy
    ports:
      - ${WEB_SERVER_SERVICE_PORT}:${WEB_SERVER_SERVICE_PORT}
